server:
  port: 9092

spring:
  application:
    name: spring-consul-webclient
  zipkin:
    enabled: false
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        instance-id: ${spring.application.name}:${random.value}
        service-name: ${spring.application.name}
        health-check-critical-timeout: "5m"
        health-check-path: /actuator/health
        health-check-interval: 10s
        hostname: DESKTOP-GJ9JFOE.mshome.net

management:
  endpoint:
    health:
      show-details: always
    consul:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

remote:
  services:
    url: http://spring-consul

info:
  application:
    name: Spring Consul WebClient
    description: Simple SpringBoot WebClient application with Service Discovery

springdoc:
  swagger-ui:
    oauth:
      client-id: spring
      client-secret: tkkH2u6lTvxh3JFsaveNQuXPWXFkd4yw
      authorizationUrl: http://localhost:8080/realms/training/protocol/openid-connect/auth
      tokenUrl: http://localhost:8080/realms/training/protocol/openid-connect/token


logging:
  level:
    org.springframework.web: TRACE
    org.springframework.http.server.reactive: TRACE
    reactor.netty.http.client: TRACE
    org.springframework.web.cors.reactive.DefaultCorsProcessor: DEBUG